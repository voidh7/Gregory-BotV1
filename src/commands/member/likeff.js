const axios = require("axios");
const { PREFIX } = require(`${BASE_DIR}/config`);

module.exports = {
  name: "likeff",
  description: "Envia likes para um jogador de Free Fire.",
  commands: ["likeff", "Likeff", "Likesff", "likesff"],
  usage: `${PREFIX}likeff <id_do_jogador>`,

  /**
   * @param {CommandHandleProps} props
   * @returns {Promise<void>}
   */
  handle: async ({ sendReply, sendErrorReply, sendReact, args }) => {
    if (!args.length) {
      return await sendErrorReply(`Exemplo de uso: ${PREFIX}likeff 12345678`);
    }

    const uid = encodeURIComponent(args[0]);
    const apiUrl = `https://world-ecletix.onrender.com/api/likesff?id=${uid}`;

    try {
      await sendReact("‚è≥");

      const startTime = Date.now();
      const { data } = await axios.get(apiUrl, { timeout: 10000 });
      const elapsed = ((Date.now() - startTime) / 1000).toFixed(2);

      // 1Ô∏è‚É£ Sistema em manuten√ß√£o
      if (data.error && data.error === "Erro ao buscar informa√ß√µes do jogador.") {
        return await sendErrorReply("‚ö†Ô∏è O sistema de *LIKES* est√° em manuten√ß√£o.\n‚è≥ Tente novamente mais tarde.");
      }

      // 2Ô∏è‚É£ ID inv√°lido
      if (!data["ID do Jogador"]) {
        return await sendErrorReply("‚ùå Jogador n√£o encontrado ou ID inv√°lido.");
      }

      // 3Ô∏è‚É£ J√° recebeu likes hoje
      if (String(data["Likes Enviados"]).startsWith("0")) {
        return await sendReply("‚ö†Ô∏è O jogador j√° recebeu likes hoje. Tente novamente em 24 horas.");
      }

      // 4Ô∏è‚É£ Sucesso
      const msg = `
‚ù§Ô∏è *Likes enviados com sucesso!*

‚Ä¢ üÜî ID: ${data["ID do Jogador"]}
‚Ä¢ ‚ú® Apelido: ${data["Apelido"]}
‚Ä¢ üåç Regi√£o: ${data["Regi√£o"]}
‚Ä¢ ‚≠ê N√≠vel: ${data["N√≠vel"]}
‚Ä¢ üî• EXP: ${Number(data["Experi√™ncia"]).toLocaleString("pt-BR")}
‚Ä¢ üëç Likes Antes: ${Number(data["Likes Antes"]).toLocaleString("pt-BR")}
‚Ä¢ üëç Likes Depois: ${Number(data["Likes Depois"]).toLocaleString("pt-BR")}
‚Ä¢ üìà Likes Enviados: ${data["Likes Enviados"]}
‚è±Ô∏è Tempo de resposta: ${elapsed} segundos
      `.trim();

      await sendReply(msg);
      await sendReact("‚úÖ");

    } catch (error) {
      console.error("Erro no likeff:", error.message);
      await sendErrorReply("üö® N√£o foi poss√≠vel buscar as informa√ß√µes de likes. Tente novamente mais tarde.");
    }
  },
}; 
