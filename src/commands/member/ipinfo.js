const axios = require("axios");
const { isGroup } = require(`${BASE_DIR}/utils`);
const { InvalidParameterError } = require(`${BASE_DIR}/errors`);

module.exports = {
  name: "localizar",
  description: "Localiza informa√ß√µes de um IP",
  commands: ["localizar", "ipinfo"],
  usage: "localizar <IP>",
  handle: async ({
    args,
    socket,
    remoteJid,
    userJid,
    sendErrorReply,
    sendWaitReply,
    sendSuccessReact,
  }) => {
    if (!args[0]) {
      await sendErrorReply("üìå Por favor, envie um IP para localizar. Exemplo: `localizar 8.8.8.8`");
      return;
    }

    const ip = args[0];

    await sendWaitReply("üîç Buscando informa√ß√µes do IP...");

    try {
      const res = await axios.get(`http://ip-api.com/json/${ip}`);
      const data = res.data;

      if (data.status !== "success") {
        await sendErrorReply("‚ùå N√£o consegui localizar esse IP. Verifique se est√° correto.");
        return;
      }

      const resposta = `
‚ï≠‚îÅ‚îÅ‚îÅüìç *Localiza√ß√£o do IP* ‚îÅ‚îÅ‚îÅ‚ïÆ
‚îÉ üåê *IP:* ${data.query}
‚îÉ üåç *Pa√≠s:* ${data.country} (${data.countryCode})
‚îÉ üèôÔ∏è *Cidade:* ${data.city}
‚îÉ üß≠  *estado:* ${data.regionName}
‚îÉ ‚öúÔ∏è  *cep:* ${data.zip}
‚îÉ ü§ü *Latitude:* ${data.lat}
‚îÉ üÄÑ *Longitude:* ${data.lon}
‚îÉ üì° *Provedor:* ${data.isp}

‚îÉ üïí *Fuso hor√°rio:* ${data.timezone}
‚îÉ üåé *google maps:*  https://www.google.com/maps?q=${data.lat},${data.lon}
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ
‚úÖ *Status:* Localiza√ß√£o obtida com sucesso
      
> by GGY BOT	
	    `.trim();

      await sendSuccessReact();

      await socket.sendMessage(remoteJid, { text: resposta });
    } catch (error) {
      console.error("[LOCALIZAR ERRO]", error);
      await sendErrorReply("‚ùå Ocorreu um erro ao tentar localizar o IP.");
    }
  },
};
